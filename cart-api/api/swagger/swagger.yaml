swagger: "2.0"
info:
  version: "0.0.1"
  title: Cart API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /customer/{customerId}/cart/products/:
    # our controller name
    x-swagger-router-controller: cart
    get:
      operationId: getAll
      description: get the list of products in cart
      parameters:
        - name: customerId
          in: path
          description: ID of customer which cart this is
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetCartProductlistResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customer/{customerId}/cart/product/:
    x-swagger-router-controller: cart
    post:
      operationId: save
      description: add a new product to the cart
      parameters:
        - name: customerId
          in: path
          description: ID of customer which cart this is
          required: true
          type: string
        - name: product
          description: product properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/cartproduct"
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /customer/{customerId}/cart/product/{productId}:
    x-swagger-router-controller: cart
    put:
      operationId: update
      description: add a new product to the cart
      parameters:
        - name: customerId
          in: path
          description: ID of customer which cart this is
          required: true
          type: string
        - name: productId
          in: path
          description: ID of product in cart
          required: true
          type: string
        - name: product
          description: product properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/editcartproduct"
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: delProduct
      description: remove a product from cart
      parameters:
        - name: customerId
          in: path
          description: ID of customer which cart this is
          required: true
          type: string
        - name: productId
          in: path
          description: ID of product in cart
          required: true
          type: string
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  editcartproduct:
    type: object
    properties: 
      amount:
        type: number
      price: 
        type: number
  cartproduct:
    type: object
    properties:
      pId:
        type: string
      productname:
        type: string
      amount:
        type: number
      price:
        type: number
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  GetCartProductlistResponse:
    required:
    - cartproducts
    properties:
      # The array of products in cart
      cartproducts:
        type: array
        items:
          type: object
          properties:
            pId:
              type: string
            productname:
              type: string
            amount:
              type: number
            price:
              type: number
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code: 
        type: string
      message:
        type: string
